// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dspa5/dspa5.proto

package dspa5

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Announcement_Level int32

const (
	// no chime (other systems may not display text)
	Announcement_NOTSET Announcement_Level = 0
	// no chime
	Announcement_DEBUG Announcement_Level = 10
	// attention chime
	Announcement_INFO Announcement_Level = 20
	// warning chime
	Announcement_WARNING Announcement_Level = 30
	// alarm chime either end
	Announcement_ERROR Announcement_Level = 40
	// alarm chime either end, message repeated twice
	Announcement_CRITICAL Announcement_Level = 50
)

var Announcement_Level_name = map[int32]string{
	0:  "NOTSET",
	10: "DEBUG",
	20: "INFO",
	30: "WARNING",
	40: "ERROR",
	50: "CRITICAL",
}
var Announcement_Level_value = map[string]int32{
	"NOTSET":   0,
	"DEBUG":    10,
	"INFO":     20,
	"WARNING":  30,
	"ERROR":    40,
	"CRITICAL": 50,
}

func (x Announcement_Level) String() string {
	return proto.EnumName(Announcement_Level_name, int32(x))
}
func (Announcement_Level) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dspa5_a0386600f5623cda, []int{2, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_dspa5_a0386600f5623cda, []int{0}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Name struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Name) Reset()         { *m = Name{} }
func (m *Name) String() string { return proto.CompactTextString(m) }
func (*Name) ProtoMessage()    {}
func (*Name) Descriptor() ([]byte, []int) {
	return fileDescriptor_dspa5_a0386600f5623cda, []int{1}
}
func (m *Name) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Name.Unmarshal(m, b)
}
func (m *Name) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Name.Marshal(b, m, deterministic)
}
func (dst *Name) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Name.Merge(dst, src)
}
func (m *Name) XXX_Size() int {
	return xxx_messageInfo_Name.Size(m)
}
func (m *Name) XXX_DiscardUnknown() {
	xxx_messageInfo_Name.DiscardUnknown(m)
}

var xxx_messageInfo_Name proto.InternalMessageInfo

func (m *Name) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// similar to a python log handler
type Announcement struct {
	Message              string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Level                Announcement_Level `protobuf:"varint,2,opt,name=level,proto3,enum=dspa5.Announcement_Level" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Announcement) Reset()         { *m = Announcement{} }
func (m *Announcement) String() string { return proto.CompactTextString(m) }
func (*Announcement) ProtoMessage()    {}
func (*Announcement) Descriptor() ([]byte, []int) {
	return fileDescriptor_dspa5_a0386600f5623cda, []int{2}
}
func (m *Announcement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Announcement.Unmarshal(m, b)
}
func (m *Announcement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Announcement.Marshal(b, m, deterministic)
}
func (dst *Announcement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Announcement.Merge(dst, src)
}
func (m *Announcement) XXX_Size() int {
	return xxx_messageInfo_Announcement.Size(m)
}
func (m *Announcement) XXX_DiscardUnknown() {
	xxx_messageInfo_Announcement.DiscardUnknown(m)
}

var xxx_messageInfo_Announcement proto.InternalMessageInfo

func (m *Announcement) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Announcement) GetLevel() Announcement_Level {
	if m != nil {
		return m.Level
	}
	return Announcement_NOTSET
}

func init() {
	proto.RegisterType((*Empty)(nil), "dspa5.Empty")
	proto.RegisterType((*Name)(nil), "dspa5.Name")
	proto.RegisterType((*Announcement)(nil), "dspa5.Announcement")
	proto.RegisterEnum("dspa5.Announcement_Level", Announcement_Level_name, Announcement_Level_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Dspa5Client is the client API for Dspa5 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type Dspa5Client interface {
	// system will transform message into fragments and stream them back as they
	// are announced.
	Speak(ctx context.Context, in *Announcement, opts ...grpc.CallOption) (Dspa5_SpeakClient, error)
}

type dspa5Client struct {
	cc *grpc.ClientConn
}

func NewDspa5Client(cc *grpc.ClientConn) Dspa5Client {
	return &dspa5Client{cc}
}

func (c *dspa5Client) Speak(ctx context.Context, in *Announcement, opts ...grpc.CallOption) (Dspa5_SpeakClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dspa5_serviceDesc.Streams[0], "/dspa5.Dspa5/Speak", opts...)
	if err != nil {
		return nil, err
	}
	x := &dspa5SpeakClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Dspa5_SpeakClient interface {
	Recv() (*Announcement, error)
	grpc.ClientStream
}

type dspa5SpeakClient struct {
	grpc.ClientStream
}

func (x *dspa5SpeakClient) Recv() (*Announcement, error) {
	m := new(Announcement)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Dspa5Server is the server API for Dspa5 service.
type Dspa5Server interface {
	// system will transform message into fragments and stream them back as they
	// are announced.
	Speak(*Announcement, Dspa5_SpeakServer) error
}

func RegisterDspa5Server(s *grpc.Server, srv Dspa5Server) {
	s.RegisterService(&_Dspa5_serviceDesc, srv)
}

func _Dspa5_Speak_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Announcement)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(Dspa5Server).Speak(m, &dspa5SpeakServer{stream})
}

type Dspa5_SpeakServer interface {
	Send(*Announcement) error
	grpc.ServerStream
}

type dspa5SpeakServer struct {
	grpc.ServerStream
}

func (x *dspa5SpeakServer) Send(m *Announcement) error {
	return x.ServerStream.SendMsg(m)
}

var _Dspa5_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dspa5.Dspa5",
	HandlerType: (*Dspa5Server)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Speak",
			Handler:       _Dspa5_Speak_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dspa5/dspa5.proto",
}

func init() { proto.RegisterFile("dspa5/dspa5.proto", fileDescriptor_dspa5_a0386600f5623cda) }

var fileDescriptor_dspa5_a0386600f5623cda = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x5d, 0xe9, 0x36, 0xed, 0x6f, 0x91, 0x75, 0xf4, 0x10, 0x7b, 0x90, 0x92, 0x53, 0x4e,
	0xa9, 0xa4, 0x78, 0xf3, 0x12, 0xdb, 0x58, 0x02, 0x65, 0x03, 0xdb, 0x88, 0xe7, 0x55, 0x17, 0x0f,
	0x76, 0x37, 0xc1, 0x44, 0xc1, 0x47, 0xf2, 0x2d, 0x25, 0x5b, 0x0a, 0x1e, 0x7a, 0x19, 0xe6, 0x1b,
	0xbe, 0xe1, 0x1f, 0x06, 0x17, 0x6f, 0x6d, 0xa3, 0xef, 0xe6, 0xbe, 0x26, 0xcd, 0x67, 0xdd, 0xd5,
	0xc4, 0x3d, 0x44, 0x01, 0x78, 0x6e, 0x9b, 0xee, 0x27, 0x9a, 0x62, 0x20, 0xb5, 0x35, 0x44, 0x18,
	0x38, 0x6d, 0x4d, 0xc8, 0x66, 0x2c, 0x1e, 0x2b, 0xdf, 0x47, 0xbf, 0x0c, 0x93, 0xcc, 0xb9, 0xfa,
	0xcb, 0xbd, 0x1a, 0x6b, 0x5c, 0x47, 0x21, 0x02, 0x6b, 0xda, 0x56, 0xbf, 0x1f, 0xbc, 0x03, 0xd2,
	0x1c, 0x7c, 0x67, 0xbe, 0xcd, 0x2e, 0x3c, 0x9d, 0xb1, 0xf8, 0x3c, 0xbd, 0x4e, 0xf6, 0x99, 0xff,
	0xb7, 0x93, 0x4d, 0x2f, 0xa8, 0xbd, 0x17, 0x49, 0x70, 0xcf, 0x04, 0x0c, 0x65, 0x59, 0x6d, 0xf3,
	0x4a, 0x9c, 0xd0, 0x18, 0x7c, 0x95, 0x3f, 0x3c, 0xad, 0x05, 0x68, 0x84, 0x41, 0x21, 0x1f, 0x4b,
	0x71, 0x45, 0x67, 0x08, 0x9e, 0x33, 0x25, 0x0b, 0xb9, 0x16, 0x37, 0xbd, 0x91, 0x2b, 0x55, 0x2a,
	0x11, 0xd3, 0x04, 0xa3, 0xa5, 0x2a, 0xaa, 0x62, 0x99, 0x6d, 0x44, 0x9a, 0xde, 0x83, 0xaf, 0xfa,
	0x48, 0x5a, 0x80, 0x6f, 0x1b, 0xa3, 0x3f, 0xe8, 0xf2, 0xc8, 0x0d, 0xd3, 0x63, 0xc3, 0x5b, 0xf6,
	0x32, 0xf4, 0xcf, 0x59, 0xfc, 0x05, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x12, 0x5c, 0xf5, 0x31, 0x01,
	0x00, 0x00,
}
